WITH RECURSIVE
-- 1) Build the hierarchy with levels (CEO has manager_id IS NULL)
EMPLOYEEHIERARCHY AS (
    SELECT
        E.EMPLOYEE_ID,
        E.EMPLOYEE_NAME,
        E.MANAGER_ID,
        E.SALARY,
        1 AS LEVEL
    FROM EMPLOYEES AS E
    WHERE E.MANAGER_ID IS NULL
    UNION ALL
    SELECT
        C.EMPLOYEE_ID,
        C.EMPLOYEE_NAME,
        C.MANAGER_ID,
        C.SALARY,
        EH.LEVEL + 1
    FROM EMPLOYEES AS C
    INNER JOIN EMPLOYEEHIERARCHY AS EH
        ON C.MANAGER_ID = EH.EMPLOYEE_ID
),

-- 2) Collect all subordinates (direct & indirect) for every manager
SUBORDINATES AS (
    -- base: direct reports
    SELECT
        E.MANAGER_ID,
        E.EMPLOYEE_ID,
        E.SALARY
    FROM EMPLOYEES AS E
    WHERE E.MANAGER_ID IS NOT NULL
    UNION ALL
    -- recursive: reports of reports
    SELECT
        S.MANAGER_ID,
        E.EMPLOYEE_ID,
        E.SALARY
    FROM EMPLOYEES AS E
    INNER JOIN SUBORDINATES AS S
        ON E.MANAGER_ID = S.EMPLOYEE_ID
),

-- 3) Aggregate team size & total budget per manager
TEAMSIZEANDBUDGET AS (
    SELECT
        E.EMPLOYEE_ID,
        COUNT(DISTINCT S.EMPLOYEE_ID) AS TEAM_SIZE,
        COALESCE(SUM(S.SALARY), 0) + E.SALARY AS TOTAL_BUDGET
    FROM EMPLOYEES AS E
    LEFT JOIN SUBORDINATES AS S
        ON E.EMPLOYEE_ID = S.MANAGER_ID
    GROUP BY E.EMPLOYEE_ID, E.SALARY
)

-- 4) Final output
SELECT
    EH.EMPLOYEE_ID,
    EH.EMPLOYEE_NAME,
    EH.LEVEL,
    COALESCE(TSB.TEAM_SIZE, 0) AS TEAM_SIZE,
    COALESCE(TSB.TOTAL_BUDGET, EH.SALARY) AS BUDGET
FROM EMPLOYEEHIERARCHY AS EH
LEFT JOIN TEAMSIZEANDBUDGET AS TSB
    ON EH.EMPLOYEE_ID = TSB.EMPLOYEE_ID
ORDER BY EH.LEVEL ASC, TSB.TOTAL_BUDGET DESC, EH.EMPLOYEE_NAME ASC;
